#summary Activity log for class meetings.
#labels Featured

== August 31 ==
  * Reviewed course [http://www.cs.lmu.edu/~ray/classes/se/syllabus/ syllabus].
  * Brief look at the [http://agilemanifesto.org/ Agile Manifesto].
  * Introduced textbook _[http://www.cc2e.com/ Code Complete]_.
  * Discussed project ideas.
  * Short tour of [http://chromeexperiments.com Chrome Experiments].
  * Possible projects based on: [http://www.addictinggames.com/redremover.html Red Remover], [http://www.rovio.com/index.php?page=angry-birds Angry Birds], and [http://www.addictinggames.com/crushthecastle.html Crush the Castle].
  * Watched Dan Pink's video on intrinsic motivation from Jeff Atwood's [http://www.codinghorror.com/blog/ Coding Horror] website.
  * *Homework*: Find out what a _standup_ is, and how they should be conducted.

== September 2 ==
  * Reviewed course notes on [http://www.cs.lmu.edu/~ray/notes/computing/ computing].
  * Long discussion on possible projects, with help from Dr. Dionisio.
  * Decided on game type: strategic, physics-based game, monkeys.
  * Discussed possible game names.

== September 7 ==
  * Figured out how to sign up and create a project in Google Code.
  * Decided on a name for the game and created the summary.
  * Created Google Code project for Manic Monkey Madness (m3).
  * Determined that naming was difficult.
  * Quick peek at [http://code.google.com/p/playserengeti/ Serengeti] project for what to expect.
  * *Homework*: Tour the playserengeti wiki.

== September 9 ==
  * Began requirements analysis for manicmonkeymadness.
  * Produced high-level requirements.
  * Discussed possible strategies for iterative design and construction.
  * Discussed layered architectures: clients, web servers, backend service layers.
  * Covered XML and JSON.
  * All students set up their workstations with subversion plugins for their IDEs, checked out the project from Google Code, and performed checkins.
  * *Homework*: get familiar with canvas.

== September 14 ==
  * Standup
    * Discussed Canvas tutorials that were studied over the weekend
    * Looked at one !JavaScript physics engine
  * Assigned tasks for next class
    * Creation of background images and sprites (Matt)
    * Money sprite initial animation (David)
    * Launcher structure and behavior with good UI techniques (Anthony)
    * Physics engine research and rough fortress collapse demo (Matt and Jarod)
  * *Lecture*: !JavaScript objects, constructors, prototypes, information hiding, and anonymous functions.

== September 16 ==
  * Standup
    * Tasks completed: basic architecture, game and menu states, console with logging, rudimentary UI for slingshot launcher, initial background.
    * Tasks planned for next class: physics engine demo, launcher "class", bouncing monkey on game canvas, mostly-functional menu.
  * Sketched some ideas for a variety of monkey launchers (slingshots, canons, teeter-totters)
  * Decided on a virtual canvas size of 2000 x 450, with 900 x 450 visible.
  * Discussion on module structure for the project: should all modules follow the anonymous function call pattern, even when there is no private state?  Tradeoff is between consistency and performance.  Since the functions would be called only once, performance is a non-issue.
  * Reminded students to actively use the wiki.  All ideas, all background research, all problems, all decisions, etc. need to be documented.

== September 21 ==
  * Standup
    * Tasks completed: Virtual canvas size with scrolling, input module, simple monkey sprite, basic fortress components with small falling ball with collision demo, cannon sprite.
    * Tasks planned: Monkey sprite sheet, cannon animation, cannon interactivity using input module, more research on physics libraries (possible fortress collapse?), framework for levels.
  * Decided to wait on world-coordinate system.
  * Talked about the Twitter !JavaScript injection exploit.
  * Brief side discussions, including ECMAScript 5 objects (with a look at John Resig's overview).

== September 23 ==
  * Standup
    * Tasks completed: Background image, monkey spritesheet, movable cannon.
    * Tasks planned: Physics implemented, begin projectile and fortress functionality.
  * *Lecture and Discussion*: Ben Cherry's [http://www.bcherry.net/talks/js-better-faster Javascript: Better and Faster] slides.
  * *Lecture and Discussion*: Nicholas Zakas' [http://www.slideshare.net/nzakas/writing-efficient-javascript Writing Efficient Javascript] slides.

== September 28 ==
  * Standup
    * Tasks completed: Improved monkey sprite sheet, primitive demo of objects bouncing off of other objects, score objects and associated graphics, bugfix for Firefox rendering problem.
    * Tasks planned: Ground positioning bugfix, data structures and game logic for two players, more realistic use of physics engine, integrate new port of box2d.
  * Brief look at [http://jslint.org JSLint].
  * Overview of [http://www.crockford.com/javascript/ Douglas Crockford's JavaScript pages].
  * Advice to check out Crockford's Good Parts book and videos.

== September 30 ==
  * Standup
    * Second player's cannon and turn logic added
    * Physical objects now fly from the cannon when fired
  * Lab session: Worked on fixing cannon rotation bug

== October 5 ==
  * Standup
    * Camera follow has been implemented
    * Sprites with arbitrary bitmaps implemented, rocks and bananas now flying
    * Interesting structures with realistic collapse now implemented
    * Progress with bug fixes, including mouse event transitions
  * Discussion about mouse events, and how click events are queued
  * Discussion of different levels (DOM 1 and DOM 2) event handling
  * *Lecture*: jQuery
  * Advice to check out Eich's video lecture on the history of JavaScript

== October 7 ==

  * Standup
    * Fortress object implemented
    * Textures and physical properties now exist for fortress pieces. The first texture implemented is wood.  Setting the properties are set programmatically; in the future these should come from a level editor
    * The launcher UI has been improved (angle clamping, fine tuning via keyboard, scroll disable during aiming)
    * Monkeys-as-phyiscal objects still in progress
  * Discussion with Prof. Dionisio on progess and UI things to consider
  * Reminded class to use the issue tracker
  * Identified highest priority activities: scores, turn taking through physical settling as opposed to absolute time, monkeys as objects
  * User feedback also identified treasure as being somewhat important

== October 12 ==

  * Standup
    * Completed: 
      * Contact listener, taking into account materials, projectiles, impact velocity, damage computation, etc.
      * Scoring -- points awarded for damage, etc.  
      * Better internal implementation of pieces (and the fortress they belong to), and callbacks.
      * Monkeys are now physical objects
      * Added new class of monkeys &mdash; the watermelon monkeys, which are harder to destroy
      * Settling computation to determine end of turn
  * Next up: 
    * Tweaking physics properties to improve the feel of the game
    * Making the cannon a physics object (so objects can bounce off)
    * Level termination condition
    * Different fortress materials
    * Refactor projectiles to remove hardcoded properties and make them true properties
  * Might want to investigate the game Worms to get other ideas on implementing turn-based games with multiple launchers
  * Long term (nice to have):
    * Textured ground
  * For discussion: 
    * lookup table for damage computation
    * the game is slowing down on Firefox.  This is being worked on!
  * Discussion on frame rates


    